AWSTemplateFormatVersion: 2010-09-09
Resources: 
  BastionVPC:
    Type:  AWS::EC2::VPC
    Properties: 
      CidrBlock: 172.16.0.0/16
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      InstanceTenancy: default
  
  BastionSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.16.0.0/24
      VpcId: !Ref BastionVPC
      MapPublicIpOnLaunch: true
      AvailabilityZone: us-east-1a
      
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: {}
    
  EC2VPC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref BastionVPC
      InternetGatewayId: !Ref InternetGateway
 
  BastionTable: 
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref BastionVPC
    DependsOn: 
      - BastionSubnet

  BastionRoute:
    Type: AWS::EC2::Route
    Properties: 
      RouteTableId: !Ref BastionTable
      GatewayId: !Ref InternetGateway
      DestinationCidrBlock: 0.0.0.0/0
  
   # asscoiate subnet with our route table else by default
   # it is asscoiated with main route table

  BastionSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref BastionSubnet
      RouteTableId: !Ref BastionTable

    
  myPublicNACL:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref BastionVPC
      
     
  myNaclRulesForInboundTCP:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref myPublicNACL
      RuleNumber: '100'
      Protocol: '1'  # icmp
      Icmp:
            Code: "-1"
            Type: "-1"
      RuleAction: allow
      Egress: 'false'  # this rule applies to ingress traffic to the subnet
      CidrBlock: 0.0.0.0/0  # any ip address
       

  myNaclRulesForOutboundTCP:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref myPublicNACL
      RuleNumber: '100'
      Protocol: '1'  # icmp
      Icmp:
            Code: "-1"
            Type: "-1"
      RuleAction: allow
      Egress: 'true'  # this rule applies to egress traffic from the subnet
      CidrBlock: 0.0.0.0/0

# associate subnet with NACL else by default it is asscoiated with main NACLs
  BastionSubnetNaclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref BastionSubnet
      NetworkAclId: !Ref myPublicNACL  
      

  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow Ping
      VpcId:
         Ref: BastionVPC
      SecurityGroupIngress:
      - IpProtocol: icmp
        FromPort: 8
        ToPort: -1
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: icmp
        FromPort: 8
        ToPort: -1
        CidrIp: 0.0.0.0/0


     
  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0a887e401f7654935
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - Ref: "BastionSecurityGroup"
          SubnetId: 
            Ref: "BastionSubnet" 
     
    DependsOn:
      - BastionRoute


